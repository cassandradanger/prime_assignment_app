@mixin isHidden() {
    position: absolute;
    left: -9999px;
}

@mixin isNotHidden() {
    position: relative;
    left: 0;
}

/* isAlwaysHidden is irreversible with CSS. It is a more strict way of hidding,
needed when absolute positioning isn't enough */
@mixin isAlwaysHidden() {
    position: absolute !important;
    left: -9999px !important;
    width: 0;
    height: 0;
}

@mixin breakpoint($point) {
  @if $point == desktop {
    @media (min-width: $WIDTH_DESKTOP) { @content; }
  }
  @else if $point == tablet {
    @media (min-width: $WIDTH_TABLET) { @content; }
  }
  @if $point == mobile {
    @media (max-width: $WIDTH_DESKTOP) { @content; }
  }  
}

/* isAlwaysHidden is irreversible with CSS. It is a more strict way of hidding,
needed when absolute positioning isn't enough */
.isAlwaysHidden {
    @include isAlwaysHidden();
}

.isHidden {
    @include isHidden();
}

.isHiddenMobile {
    @media only screen and (min-width: $WIDTH_DESKTOP) {
        @include isHidden();
    }
}

.isHiddenDesktop {
    @media only screen and (max-width: $WIDTH_DESKTOP) {
        @include isHidden();
    }
}


/* include 2x images when available for retina devices */

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: asset-url($image);
    background-size: $width $height;
  }
}


%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}